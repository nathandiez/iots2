
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # azurerm_container_registry.acr[0m will be created
[0m  [32m+[0m[0m resource "azurerm_container_registry" "acr" {
      [32m+[0m[0m admin_enabled                 = true
      [32m+[0m[0m admin_password                = (sensitive value)
      [32m+[0m[0m admin_username                = (known after apply)
      [32m+[0m[0m encryption                    = (known after apply)
      [32m+[0m[0m export_policy_enabled         = true
      [32m+[0m[0m id                            = (known after apply)
      [32m+[0m[0m location                      = "eastus"
      [32m+[0m[0m login_server                  = (known after apply)
      [32m+[0m[0m name                          = "nathaniots2040525"
      [32m+[0m[0m network_rule_bypass_option    = "AzureServices"
      [32m+[0m[0m network_rule_set              = (known after apply)
      [32m+[0m[0m public_network_access_enabled = true
      [32m+[0m[0m resource_group_name           = "rg-iotsystem-port"
      [32m+[0m[0m retention_policy              = (known after apply)
      [32m+[0m[0m sku                           = "Basic"
      [32m+[0m[0m trust_policy                  = (known after apply)
      [32m+[0m[0m zone_redundancy_enabled       = false
    }

[1m  # azurerm_kubernetes_cluster.aks[0m will be created
[0m  [32m+[0m[0m resource "azurerm_kubernetes_cluster" "aks" {
      [32m+[0m[0m api_server_authorized_ip_ranges     = (known after apply)
      [32m+[0m[0m current_kubernetes_version          = (known after apply)
      [32m+[0m[0m dns_prefix                          = "aks-iotsystem"
      [32m+[0m[0m fqdn                                = (known after apply)
      [32m+[0m[0m http_application_routing_zone_name  = (known after apply)
      [32m+[0m[0m id                                  = (known after apply)
      [32m+[0m[0m image_cleaner_enabled               = false
      [32m+[0m[0m image_cleaner_interval_hours        = 48
      [32m+[0m[0m kube_admin_config                   = (sensitive value)
      [32m+[0m[0m kube_admin_config_raw               = (sensitive value)
      [32m+[0m[0m kube_config                         = (sensitive value)
      [32m+[0m[0m kube_config_raw                     = (sensitive value)
      [32m+[0m[0m kubernetes_version                  = (known after apply)
      [32m+[0m[0m location                            = "eastus"
      [32m+[0m[0m name                                = "aks-iotsystem-cluster"
      [32m+[0m[0m node_resource_group                 = (known after apply)
      [32m+[0m[0m node_resource_group_id              = (known after apply)
      [32m+[0m[0m oidc_issuer_url                     = (known after apply)
      [32m+[0m[0m portal_fqdn                         = (known after apply)
      [32m+[0m[0m private_cluster_enabled             = false
      [32m+[0m[0m private_cluster_public_fqdn_enabled = false
      [32m+[0m[0m private_dns_zone_id                 = (known after apply)
      [32m+[0m[0m private_fqdn                        = (known after apply)
      [32m+[0m[0m public_network_access_enabled       = true
      [32m+[0m[0m resource_group_name                 = "rg-iotsystem-port"
      [32m+[0m[0m role_based_access_control_enabled   = true
      [32m+[0m[0m run_command_enabled                 = true
      [32m+[0m[0m sku_tier                            = "Free"
      [32m+[0m[0m support_plan                        = "KubernetesOfficial"
      [32m+[0m[0m workload_identity_enabled           = false

      [32m+[0m[0m api_server_access_profile (known after apply)

      [32m+[0m[0m auto_scaler_profile (known after apply)

      [32m+[0m[0m default_node_pool {
          [32m+[0m[0m kubelet_disk_type    = (known after apply)
          [32m+[0m[0m max_pods             = (known after apply)
          [32m+[0m[0m name                 = "default"
          [32m+[0m[0m node_count           = 3
          [32m+[0m[0m node_labels          = (known after apply)
          [32m+[0m[0m orchestrator_version = (known after apply)
          [32m+[0m[0m os_disk_size_gb      = 30
          [32m+[0m[0m os_disk_type         = "Managed"
          [32m+[0m[0m os_sku               = (known after apply)
          [32m+[0m[0m scale_down_mode      = "Delete"
          [32m+[0m[0m type                 = "VirtualMachineScaleSets"
          [32m+[0m[0m ultra_ssd_enabled    = false
          [32m+[0m[0m vm_size              = "Standard_B2s"
          [32m+[0m[0m vnet_subnet_id       = (known after apply)
          [32m+[0m[0m workload_runtime     = (known after apply)
        }

      [32m+[0m[0m identity {
          [32m+[0m[0m principal_id = (known after apply)
          [32m+[0m[0m tenant_id    = (known after apply)
          [32m+[0m[0m type         = "SystemAssigned"
        }

      [32m+[0m[0m kubelet_identity (known after apply)

      [32m+[0m[0m network_profile {
          [32m+[0m[0m dns_service_ip          = "10.240.0.10"
          [32m+[0m[0m docker_bridge_cidr      = "172.17.0.1/16"
          [32m+[0m[0m ebpf_data_plane         = (known after apply)
          [32m+[0m[0m ip_versions             = (known after apply)
          [32m+[0m[0m load_balancer_sku       = "standard"
          [32m+[0m[0m network_data_plane      = (known after apply)
          [32m+[0m[0m network_mode            = (known after apply)
          [32m+[0m[0m network_plugin          = "kubenet"
          [32m+[0m[0m network_policy          = (known after apply)
          [32m+[0m[0m outbound_ip_address_ids = (known after apply)
          [32m+[0m[0m outbound_ip_prefix_ids  = (known after apply)
          [32m+[0m[0m outbound_type           = "loadBalancer"
          [32m+[0m[0m pod_cidr                = (known after apply)
          [32m+[0m[0m pod_cidrs               = (known after apply)
          [32m+[0m[0m service_cidr            = "10.240.0.0/16"
          [32m+[0m[0m service_cidrs           = (known after apply)

          [32m+[0m[0m load_balancer_profile (known after apply)

          [32m+[0m[0m nat_gateway_profile (known after apply)
        }

      [32m+[0m[0m windows_profile (known after apply)
    }

[1m  # azurerm_public_ip.ingress_pip[0m will be created
[0m  [32m+[0m[0m resource "azurerm_public_ip" "ingress_pip" {
      [32m+[0m[0m allocation_method       = "Static"
      [32m+[0m[0m ddos_protection_mode    = "VirtualNetworkInherited"
      [32m+[0m[0m fqdn                    = (known after apply)
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m idle_timeout_in_minutes = 4
      [32m+[0m[0m ip_address              = (known after apply)
      [32m+[0m[0m ip_version              = "IPv4"
      [32m+[0m[0m location                = "eastus"
      [32m+[0m[0m name                    = "pip-aks-ingress"
      [32m+[0m[0m resource_group_name     = "rg-iotsystem-port"
      [32m+[0m[0m sku                     = "Standard"
      [32m+[0m[0m sku_tier                = "Regional"
    }

[1m  # azurerm_resource_group.rg[0m will be created
[0m  [32m+[0m[0m resource "azurerm_resource_group" "rg" {
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m location = "eastus"
      [32m+[0m[0m name     = "rg-iotsystem-port"
    }

[1m  # azurerm_subnet.aks_subnet[0m will be created
[0m  [32m+[0m[0m resource "azurerm_subnet" "aks_subnet" {
      [32m+[0m[0m address_prefixes                               = [
          [32m+[0m[0m "10.0.1.0/24",
        ]
      [32m+[0m[0m default_outbound_access_enabled                = true
      [32m+[0m[0m enforce_private_link_endpoint_network_policies = (known after apply)
      [32m+[0m[0m enforce_private_link_service_network_policies  = (known after apply)
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m name                                           = "snet-aks"
      [32m+[0m[0m private_endpoint_network_policies              = (known after apply)
      [32m+[0m[0m private_endpoint_network_policies_enabled      = (known after apply)
      [32m+[0m[0m private_link_service_network_policies_enabled  = (known after apply)
      [32m+[0m[0m resource_group_name                            = "rg-iotsystem-port"
      [32m+[0m[0m virtual_network_name                           = "vnet-iotsystem"
    }

[1m  # azurerm_virtual_network.vnet[0m will be created
[0m  [32m+[0m[0m resource "azurerm_virtual_network" "vnet" {
      [32m+[0m[0m address_space       = [
          [32m+[0m[0m "10.0.0.0/16",
        ]
      [32m+[0m[0m dns_servers         = (known after apply)
      [32m+[0m[0m guid                = (known after apply)
      [32m+[0m[0m id                  = (known after apply)
      [32m+[0m[0m location            = "eastus"
      [32m+[0m[0m name                = "vnet-iotsystem"
      [32m+[0m[0m resource_group_name = "rg-iotsystem-port"
      [32m+[0m[0m subnet              = (known after apply)
    }

[1mPlan:[0m 6 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m acr_login_server        = (known after apply)
  [32m+[0m[0m acr_name                = "nathaniots2040525"
  [32m+[0m[0m aks_cluster_id          = (known after apply)
  [32m+[0m[0m aks_cluster_name        = "aks-iotsystem-cluster"
  [32m+[0m[0m aks_node_resource_group = (known after apply)
  [32m+[0m[0m ingress_public_ip       = (known after apply)
[33mâ•·[0m[0m
[33mâ”‚[0m [0m[1m[33mWarning: [0m[0m[1mArgument is deprecated[0m
[33mâ”‚[0m [0m
[33mâ”‚[0m [0m[0m  with azurerm_kubernetes_cluster.aks,
[33mâ”‚[0m [0m  on main.tf line 80, in resource "azurerm_kubernetes_cluster" "aks":
[33mâ”‚[0m [0m  80:     docker_bridge_cidr = [4m"172.17.0.1/16"[0m  # Default bridge CIDR[0m
[33mâ”‚[0m [0m
[33mâ”‚[0m [0m`docker_bridge_cidr` has been deprecated as the API no longer supports it and will be removed in version 4.0 of the
[33mâ”‚[0m [0mprovider.
[33mâ”‚[0m [0m
[33mâ”‚[0m [0m(and one more similar warning elsewhere)
[33mâ•µ[0m[0m
[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
