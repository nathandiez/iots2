# values.yaml
# Global configurations
namespace: iot-system

# Service account configuration
serviceAccount:
  create: true
  name: iot-service-account

# MQTT broker (Mosquitto) configuration
mosquitto:
  image:
    repository: eclipse-mosquitto
    tag: 2.0.18  # Using specific version instead of latest
    pullPolicy: IfNotPresent
  env:
  - name: MOSQUITTO_ALLOW_ANONYMOUS
    value: "false"
  certificate:
    organization: "IoT System"
  securityContext:
    runAsUser: 1000
    runAsNonRoot: true
  resources:
    requests:
      memory: "64Mi"
      cpu: "25m"
    limits:
      memory: "128Mi"
      cpu: "100m"
  config:
    allowAnonymous: false
    requireClientCertificate: false
  credentials:
    iotServiceUsername: "iot_service"
    iotServicePassword: "pw123"  # Replace for production
    testPubUsername: "test_pub"
    testPubPassword: "pw123"     # Replace for production
  service:
    type: LoadBalancer
    annotations:
      cloud.google.com/app-protocols: '{"mqtt":"TCP", "mqtts":"TCP"}'

# IoT Service configuration
iotService:
  image:
    repository: raraid/iot-service
    tag: latest
    pullPolicy: Always
  replicas: 1
  securityContext:
    runAsUser: 1000
    runAsNonRoot: true
  resources:
    requests:
      memory: "64Mi"
      cpu: "25m"
    limits:
      memory: "128Mi"
      cpu: "100m"
  port: 5000
  metrics:
    enabled: true
    port: 8000
    path: /metrics

# Test publisher configuration
testPub:
  image:
    repository: raraid/test-pub
    tag: latest
    pullPolicy: Always
  replicas: 0
  securityContext:
    runAsUser: 1000
    runAsNonRoot: true
  resources:
    requests:
      memory: "32Mi"
      cpu: "25m"
    limits:
      memory: "64Mi"
      cpu: "50m"

# TimescaleDB configuration
timescaledb:
  image:
    repository: timescale/timescaledb
    tag: 2.11.1-pg14  # Using specific version instead of latest
    pullPolicy: IfNotPresent
  securityContext:
    runAsUser: 70
    runAsNonRoot: true
  persistence:
    enabled: false   # CHANGED: Disabled persistence
    size: 10Gi
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  port: 5432
  database:
    name: iotdb    # UPDATED: Changed from iotdb to match api-db-secrets.yaml
    user: iotuser  # UPDATED: Changed from iotuser to match api-db-secrets.yaml
    password: "pw123"  # Replace for production

# Web Backend configuration
webBackend:
  image:
    repository: raraid/web-backend
    tag: latest
    pullPolicy: Always
  replicas: 1
  securityContext:
    runAsUser: 1000
    runAsNonRoot: true
  resources:
    requests:
      memory: "64Mi"
      cpu: "25m"
    limits:
      memory: "128Mi"
      cpu: "100m"
  port: 5000
  service:
    type: NodePort

# Web Frontend configuration
webFrontend:
  image:
    repository: raraid/web-frontend
    tag: latest
    pullPolicy: Always
  replicas: 1
  securityContext:
    runAsUser: 1000
    runAsNonRoot: true
  resources:
    requests:
      memory: "64Mi"
      cpu: "25m"
    limits:
      memory: "128Mi"
      cpu: "100m"
  port: 3000
  service:
    type: NodePort
    port: 3000

# API credentials
apiCredentials:
  apiKey: "V2Rvl3oopKZovBFElU83BhbwNqr6WaAd" # API key expected by the frontend

# Network policy settings
networkPolicy:
  enabled: true

# Ingress configuration
ingress:
  enabled: true
  useTLS: false # Set to false, cert-manager is failing, and TLS handled separately
  className: nginx
  host: iot.52.170.2.81.nip.io  # Using your Azure public IP
  annotations: {}


