apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-backend
  namespace: {{ .Release.Namespace }}
  labels:
    app: web-backend
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/name: {{ include "iot-system.name" . }}
    helm.sh/chart: {{ include "iot-system.chart" . }}
spec:
  replicas: {{ .Values.webBackend.replicas }}
  selector:
    matchLabels:
      app: web-backend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: web-backend
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/name: {{ include "iot-system.name" . }}
        # If you want that "kubectl.kubernetes.io/restartedAt" annotation:
        # annotations:
        #   kubectl.kubernetes.io/restartedAt: "2025-03-19T05:14:00-04:00"
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: web-backend
        image: "{{ .Values.webBackend.image.repository }}:{{ .Values.webBackend.image.tag }}"
        imagePullPolicy: {{ .Values.webBackend.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.webBackend.port }}
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.webBackend.port }}
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: {{ .Values.webBackend.port }}
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        resources:
          requests:
            cpu: {{ .Values.webBackend.resources.requests.cpu | quote }}
            memory: {{ .Values.webBackend.resources.requests.memory | quote }}
          limits:
            cpu: {{ .Values.webBackend.resources.limits.cpu | quote }}
            memory: {{ .Values.webBackend.resources.limits.memory | quote }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
        env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: POSTGRES_PASSWORD
        - name: POSTGRES_HOST
          value: timescaledb
        - name: POSTGRES_PORT
          value: "5432"
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              name: api-credentials
              key: API_KEY
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
