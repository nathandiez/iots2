Thank you for installing {{ .Chart.Name }}.

Your IoT System has been deployed to the {{ .Values.namespace }} namespace.

{{- if contains "NodePort" .Values.webFrontend.service.type }}
To access the web interface:
  export NODE_PORT=$(kubectl get --namespace {{ .Values.namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services web-frontend)
  export NODE_IP=$(kubectl get nodes --namespace {{ .Values.namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.webFrontend.service.type }}
To access the web interface:
  NOTE: It may take a few minutes for the LoadBalancer IP to be available.
  Watch the status with: kubectl get svc --namespace {{ .Values.namespace }} -w web-frontend
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Values.namespace }} web-frontend --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.webFrontend.service.port }}
{{- else if contains "ClusterIP" .Values.webFrontend.service.type }}
To access the web interface:
  kubectl port-forward svc/web-frontend {{ .Values.webFrontend.port }}:{{ .Values.webFrontend.service.port }} --namespace {{ .Values.namespace }}
  Visit http://localhost:{{ .Values.webFrontend.port }}
{{- end }}

To check the status of your pods:
  kubectl get pods --namespace {{ .Values.namespace }}

MQTT broker is running at mosquitto.{{ .Values.namespace }}.svc.cluster.local on ports 1883 (standard) and 8883 (TLS).
TimescaleDB is available at timescaledb.{{ .Values.namespace }}.svc.cluster.local on port {{ .Values.timescaledb.port }}.

IMPORTANT: Before using the TLS features, make sure you've created the mosquitto-certs secret:
  kubectl create secret generic mosquitto-certs \
    --from-file=ca.crt=./certs/ca.crt \
    --from-file=server.crt=./certs/server.crt \
    --from-file=server.key=./certs/server.key \
    -n {{ .Values.namespace }}