apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-pub
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "iot-system.labels" . | nindent 4 }}
    app: test-pub
spec:
  replicas: {{ .Values.testPub.replicas }}
  selector:
    matchLabels:
      app: test-pub
  template:
    metadata:
      labels:
        app: test-pub
        {{- include "iot-system.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      securityContext:
        runAsNonRoot: true
        runAsUser: {{ .Values.testPub.securityContext.runAsUser }}
        fsGroup: 2000
      containers:
      - name: test-pub
        image: "{{ .Values.testPub.image.repository }}:{{ .Values.testPub.image.tag }}"
        imagePullPolicy: {{ .Values.testPub.image.pullPolicy }}
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: {{ .Values.testPub.securityContext.runAsUser }}
        env:
        - name: MQTT_BROKER
          value: mosquitto
        - name: MQTT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mosquitto-passwd
              key: username-test-pub
        - name: MQTT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mosquitto-passwd
              key: password-test-pub
        {{- if .Values.certificates.mosquitto.enabled }}
        volumeMounts:
        - name: mosquitto-certs
          mountPath: /mosquitto/certs
          readOnly: true
        {{- end }}
        resources:
          {{- toYaml .Values.testPub.resources | nindent 10 }}
      {{- if .Values.certificates.mosquitto.enabled }}
      volumes:
      - name: mosquitto-certs
        secret:
          secretName: {{ .Values.certificates.mosquitto.secretName }}
      {{- end }}